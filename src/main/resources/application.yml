org:
  springframework:
    boot:
      autoconfigure:
        EnableAutoConfiguration: org.ditto.easyhan.config.SpringConfig

gedit:
  docker:
    enabled: false
    cloud:
      config:
        server:
          git:
            uri:
            clone-on-start: true
security:
  basic:
    enabled:
      false
  oauth2:
    resource:
      jwt:
        key-uri:
management:
  security:
    enabled: false
grpc:
  port: 9980
server:
  port: 9089
spring:
  profiles:
    active: test
  jpa:
    database: mysql
    show-sql: true
    hibernate:
      ddl-auto: update
    generate-ddl: true
    properties:
      hibernate: dialect:org.hibernate.dialect.MySQL5Dialect
  data:
    jpa:
      repositories:
        enabled: true
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    name: hikari
    # 下面为连接池的补充设置，应用到上面所有数据源中
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 60000
      connection-test-query: select 1 from dual
      pool-name: gedit_user
  # REDIS (RedisProperties)
  redis:
    database: 9
    port: 6379
    pool:
      max-idle: 8
      min-idle: 0
      max-active: 8
      max-wait: -1
httpclient:
  pool:
    sync:
      #对每个指定连接的服务器（指定的ip）可以创建并发5 socket进行访问
      max-conn-per-route: 5
      #创建socket的上线是10
      max-conn-total: 10
    async:
      #对每个指定连接的服务器（指定的ip）可以创建并发5 socket进行访问
      max-conn-per-route: 5
      #创建socket的上线是10
      max-conn-total: 10
  request:
    sync:
      connection-request-timeout: 3000
      connect-timeout: 3000
      read-timeout: 3000
    async:
      connection-request-timeout: 5000
      connect-timeout: 5000
      read-timeout: 5000
captcha:
  expire:
    minutes: 5
sms:
  active: false
jjwt:
  expire:
    minutes: 10080 #7 days expire
  sigin:
    key: shuai
... #end tag
--- #file split
spring:
  profiles: dev
  datasource:
    url: jdbc:mysql://192.168.1.200:3306/gedit_user?useSSL=false
    hikari:
      username: root
      password: Qizhidao!123456
  redis:
    host: 192.168.1.200
    password: user_center
...
---
spring:
  profiles: test
  datasource:
    url: jdbc:mysql://dev.jifenpz.com:3306/gedit_user?useSSL=false
    hikari:
      username: root
      password:
  redis:
    host: dev.jifenpz.com
    password: user_center
...
